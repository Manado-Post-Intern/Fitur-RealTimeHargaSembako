apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    compileSdkVersion 34
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion
    lint {
        baseline = file("lint-baseline.xml")
    }

    namespace "com.mp.manadopost"
    defaultConfig {
        targetSdkVersion 34
        applicationId "com.mp.manadopost"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 212
        versionName "2.1.2"
        missingDimensionStrategy "store", "play"
    }

    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", "false"
            buildConfigField "boolean", "IS_HERMES_ENABLED", "true"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", "false"
            buildConfigField "boolean", "IS_HERMES_ENABLED", "true"
        }
    }
}

dependencies {
    def billing_version = "7.0.0"
    implementation "com.android.billingclient:billing:$billing_version"
    implementation("com.facebook.react:react-android")
    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.firebase:firebase-auth:21.4.3'
    implementation 'com.google.firebase:firebase-core:21.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation project(':react-native-iap')

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.dooboolab' && details.requested.name == 'react-native-iap') {
            details.useTarget group: details.requested.group, name: details.requested.name, version: details.requested.version, classifier: 'playDebugApiElements'
        }
    }
}
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)